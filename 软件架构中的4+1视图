软件架构中的4+1视图

4+1视图中的每一个视图都描述了软件系统的一个侧面。这样做的主要目的是把复杂的问题简单化，通过一个侧面来看整个软件系统可以忽略掉当前我们并不急切关注的因素，从而简化我们的工作量和工作难度。

什么是软件架构? 这在不同人的眼中有不同的定义。

开发工程师关注的是选用什么样的框架。编写哪些类模块。

设计工程师关注的是需要设计哪些接口。

系统工程师关注的是业务领域的关系建模。

代码管理工程师关注的是开发的和编译后的软件是个什么样的结构。

数据库工程师关注的是数据的持久化，软件不过是对数据的存储和处理。

部署工程师关注的是软件如何部署到硬件设备上去。

用户眼中的软件架构就是一个个的子系统如何进行划分。

从以上的描述可以看出，在不同角色的人的眼中，软件架构有不同的形态。

软件的特点是需求多变。

基于此，4+1视图提出了用4种架构视图和场景描述来定义软件的架构。

逻辑视图描述的是设计对象的关系描述。
流程视图描述的是并行计算和数据同步的设计。
物理视图描述的是软件在硬件上的物理硬映射及其分布。
开发视图是指在软件开发中的静态组织结构。

以上4种视图都需要通过一些场景案例贯穿起来。

这样就是4+1视图的基本描述和定义。

对于不同角色的工程师，对于4+1视图的侧重点也不同。系统工作室关注的是物理视图和流程视图。

终端用户，客户和数据专家会从逻视图否出发。

项目经理和软件配置人员会从开发视图出发来看待问题。

几个争议点:
成本和进度视图是不是可以合并到开发视图当中?
数据视图是不是可以折合到逻辑视图当中？
执行视图是不是可以包含在流程和物理视图当中？
