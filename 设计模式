设计模式。

有时候在面试的过程中，考官会问我们一些设计模式相关的问题，比如说请你列举一下你知道的和使用过的设计模式。

我们现在就来看一下，我们在编程过程中常用的一些设计模式。

1. 创造性的设计模式。

抽象工厂。提供一个接口，用于创建对象和相关对象的族，还不需要指定他们的具体类。

工厂方法。定义一个用于创建单一对象的接口，按照子类来决定实例化哪个类。工厂方法将实例化推迟到了子类。

单一模式。确保一个类只有一个实例，并提供一个全局访问点来访问它。

2. 结构型设计模式。

适配器模式。将一个类或多个类的接口转换成客户期望的接口。用于帮助那些因为接口不兼容而无法工作的类。

桥模式。将抽象概念跟它的具体实现脱钩，允许两者独立变化。

组合模式。将对象组合成树状结构。以表示部分和整体的层次。组合模式让用户处理单一对象或者对象的组合。

装饰模式。将额外的职责动态的附加到一个对象上。保持相同的接口。装饰器提供了一个灵活的替代子类的方法。

门面模式。为子系统中的一系列接口提供一个统一的接口。为子系统提高提供了更高层次的接口，使其更容易使用。

3. 行为模式。

迭代模式。在不暴露其底层表示的情况下，提供一种方法，来逐一的访问一个集合的每一个元素。

发布订阅模式。在对象之间定义一对多的依赖关系。一个对象的状态变化会导致其所有的依赖对象都收到通知并进行更新。

策略模式。定一个算法系列。对每一个算法进行分装。策略模式让算法的变化，独立于客户的使用。

模板方法模式。在一个操作中定义一个算法的骨架，将一些步骤推迟到子类。模板方法，让用户在不改变算法结构的前提下，可以重新定义算法的某些具体步骤。
